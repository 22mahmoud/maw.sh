#!/bin/sh

check_variable() {
  variable="$1"
  message="$2"

  if [ -z "${variable}" ]; then
    echo "$message"
    exit 1
  fi
}

fetch_game_data() {
  game_id="$1"
  api_key="$2"

  response=$(curl -s "https://api.rawg.io/api/games/$game_id?key=$api_key")

  echo "$response"
}

val() {
  echo "$1" | yq -r "$2"
}

create_or_update_markdown() {
  mkdir -p "$1"

  if [ ! -f "$1/index.md" ]; then
    cat <<EOF >"$1/index.md"
---
date: $(date -I'minutes')
state: wanted
cover_image: "./cover.webp"
game: true
---
EOF
    echo "Game file for '$2' created successfully at $1."
  fi
}

download_cover_image() {
  curl -s "$2" -o "$1/cover.jpg"
  cwebp -resize 480 0 -q 80 "$1/cover.jpg" -o "$1/cover.webp"
  rm "$1/cover.jpg"
}

update_metadata() {
  yq --front-matter="process" -i ".$2 = \"$3\"" "$1"
}

main() {
  game_id="$1"
  api_key="$API_KEY"

  check_variable "$game_id" "Usage: $0 <game_id>"
  check_variable "$api_key" "Error: API_KEY environment variable is not set."

  response=$(fetch_game_data "$game_id" "$api_key")

  if [ "$(echo "$response" | yq -r '.detail')" = "Not found." ]; then
    echo "Error: Game ID '$game_id' not found."
    exit 1
  fi

  title=$(val "$response" '.name')
  original_url=$(val "$response" '.website')
  description=$(val "$response" '.description_raw')
  release_date=$(val "$response" '.released')
  slug=$(val "$response" '.slug')
  cover_image=$(val "$response" '.background_image')

  dir_name=src/games/"$slug"
  path_name="$dir_name"/index.md

  create_or_update_markdown "$dir_name" "$title"
  download_cover_image "$dir_name" "$cover_image"

  update_metadata "$path_name" "title" "$title"
  update_metadata "$path_name" "release_date" "$release_date"
  update_metadata "$path_name" "description" "$description"
  update_metadata "$path_name" "cover_image" "./cover.webp"
  update_metadata "$path_name" "original_url" "$original_url"

  echo "Game file for '$title' updated successfully at $path_name."
}

main "$@"
