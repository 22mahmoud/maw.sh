#!/bin/sh

check_variable() {
	variable="$1"
	message="$2"

	if [ -z "${variable}" ]; then
		echo "$message"
		exit 1
	fi
}

fetch_game_data() {
	curl -s "https://api.rawg.io/api/games/$game_id?key=$api_key"
}

val() {
	echo "$response" | yq -r "$1"
}

create_or_update_markdown() {
	if [ ! -f "$path_name" ]; then
		cat <<EOF >"$path_name"
---
date: $(date -I'minutes')
state: wanted
cover_image: "./cover.webp"
template:
  game: true
---
EOF
		echo "Game file for '$title' created successfully at $dir_name."
	fi
}

download_cover_image() {
	curl -s "$cover_image" -o "$dir_name/cover.jpg"
	cwebp -resize 480 0 -q 80 "$dir_name/cover.jpg" -o "$dir_name/cover.webp"
	cwebp -resize 250 0 "$dir_name/cover.jpg" -o "$dir_name/cover-small.webp"
}

update_metadata() {
	yq --front-matter="process" -i ".$1 = \"$2\"" "$path_name"
}

main() {
	game_id="$1"
	api_key="$API_KEY"

	check_variable "$game_id" "Usage: $0 <game_id>"
	check_variable "$api_key" "Error: API_KEY environment variable is not set."

	response=$(fetch_game_data)

	if [ "$(echo "$response" | yq -r '.detail')" = "Not found." ]; then
		echo "Error: Game ID '$game_id' not found."
		exit 1
	fi

	title=$(val '.name')
	original_url=$(val '.website')
	description=$(val '.description_raw')
	release_date=$(val '.released')
	slug=$(val '.slug')
	cover_image=$(val '.background_image')

	dir_name=src/games/"$slug"
	path_name="$dir_name"/index.md

	mkdir -pv "$dir_name"

	create_or_update_markdown
	download_cover_image

	update_metadata "title-prefix" "$title"
	update_metadata "release_date" "$release_date"
	update_metadata "description" "$description"
	update_metadata "cover_image" "./cover.webp"
	update_metadata "original_url" "$original_url"

	echo "Game file for '$title' updated successfully at $path_name."
}

main "$@"
