#!/bin/sh

output="$1"
output_dir=$(dirname "$output")

input="$(echo "$1" | sed 's/^dist/src/' | sed 's/index.html$/index.md/' | sed 's/.xml$/\/index.md/')"
input_dir=$(dirname "$input")

path=$(echo "$input_dir" | sed -E 's|^src(/)?||')

if [ -n "$path" ]; then path="/${path%/}/"; fi

mkdir -pv "$output_dir"

comments_file="$input_dir"/comments.yaml

pandoc_args="--variable path=$path"
pandoc_output="$output"

if [ -f "$comments_file" ]; then
  pandoc_args="$pandoc_args --metadata-file=$comments_file"
fi

is_draft="$(yq --front-matter="extract" '.draft' "$input")"

if [ "$is_draft" = 'true' ]; then
  rm -vrf "$(dirname "$output")"
  echo "[html skipped (a draft)]:" "$output"
  exit 0
fi

is_rss="$(yq --front-matter="extract" '.rss' "$input")"

if [ "$is_rss" = 'true' ]; then
  pandoc_args="$pandoc_args --template rss.xml --variable updated_at=$(date -u +"%Y-%m-%dT%H:%M:%SZ")"
fi

pagination="$(yq --front-matter="extract" '.pagination' "$input")"
if [ "$pagination" != "null" ]; then
  pandoc_output=/dev/null
fi

eval pandoc -d pandoc.yaml \
  "${pandoc_args}" \
  "$input" -o "$pandoc_output" && echo "[html generated]:" "$output" &

wait
