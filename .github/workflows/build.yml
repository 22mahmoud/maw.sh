name: build

on:
  workflow_dispatch:
  push:
  workflow_run:
    workflows: ['update_webmentions']
    types:
      - completed
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22]

    steps:
      - name: instal deps
        env:
          minhtml_url: https://github.com/wilsonzlin/minify-html/releases/download/v0.15.0/minhtml-0.15.0-x86_64-unknown-linux-gnu
          minhtml: minhtml-0.15.0-x86_64-unknown-linux-gnu
          pandoc_url: https://github.com/jgm/pandoc/releases/download/3.6/pandoc-3.6-linux-amd64.tar.gz
          pandoc: pandoc-3.6
          pandoc_linux: pandoc-3.6-linux-amd64.tar.gz
        run: |
          wget $pandoc_url; wget $minhtml_url; sudo apt install ffmpeg imagemagick
          chmod +x $minhtml
          sudo cp -r $minhtml /usr/local/bin/minhtml
          sudo ln -s /usr/bin/convert /usr/bin/magick
          tar -xvf $pandoc_linux
          sudo cp -r $pandoc/bin/* /usr/local/bin
          sudo cp -r $pandoc/share/* /usr/local/share

      - name: Checkout the source repository
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Restore cached dist
        id: cache-dist-restore
        uses: actions/cache/restore@v4
        with:
          path: |
            dist
          key: ${{ runner.os }}-dist-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-dist-

      - name: Restore cached .tmp
        id: cache-tmp-restore
        uses: actions/cache/restore@v4
        with:
          path: |
            dist
          key: ${{ runner.os }}-tmp-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-tmp-

      - name: clean dist dir
        if: github.event_name == 'workflow_dispatch'
        run: make distclean

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: install node deps
        run: |
          pnpm install

      - name: build
        run: |
          make build -j$(nproc)
          wait

      - name: post build
        run: |
          pnpm run css

      - name: Save dist cache
        id: cache-dist-save
        uses: actions/cache/save@v4
        with:
          path: |
            dist
          key: ${{ runner.os }}-dist-${{ github.sha }}

      - name: Save tmp cache
        id: cache-tmp-save
        uses: actions/cache/save@v4
        with:
          path: |
            .tmp
          key: ${{ runner.os }}-tmp-${{ github.sha }}

      - name: install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.KEY }}
          known_hosts: 'placeholder'
          if_key_exists: fail

      - name: add known_hosts
        run: ssh-keyscan -p ${{ secrets.PORT }} -H ${{ secrets.HOST }} >> ~/.ssh/known_hosts

      - name: rsync over SSH
        env:
          ssh_port: ${{ secrets.PORT }}
          ssh_username: ${{ secrets.USERNAME }}
          ssh_host: ${{ secrets.HOST }}
          build_path: ${{ secrets.BUILD_PATH }}
        run: |
          rsync -avz -e "ssh -p $ssh_port" dist $ssh_username@$ssh_host:$build_path --delete
